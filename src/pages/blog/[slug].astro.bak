---
import { getPosts, getPostBySlug } from '../../lib/queries';
import { urlFor } from '../../lib/sanity';
import BlogPost from '../../layouts/BlogPost.astro';

export async function getStaticPaths() {

  const posts = await getPosts();
  return posts.map(post => ({
    params: { slug: post.slug.current },
    props: { post },
  }));
}

// Get the post data
const { post } = Astro.props;

if (!post) {
  return Astro.redirect('/404');
}

// Convert Sanity data to match BlogPost layout expectations
const frontmatter = {

  title: post.title,
  description: post.excerpt || post.title,
  pubDate: new Date(post.publishedAt),
  image: post.mainImage ? urlFor(post.mainImage).width(1200).url() : null,
  author: post.author?.name || 'Healthcare Team',
  category: post.categories?.[0]?.title || 'General',
  tags: post.categories?.map(cat => cat.title) || [],
};

function renderContent(content) {
  if (!content) return '';
  
  return content.map(block => {
    if (block._type === 'block') {
      const style = block.style || 'normal';
      const text = block.children
        .map(child => child.text)
        .join('');

          .map(child => child.text)  image: post.mainImage ? urlFor(post.mainImage).width(1200).url() : null,

          .join('');  author: post.author?.name || 'Healthcare Team',

          category: post.categories?.[0]?.title || 'General',

        switch (style) {  tags: post.categories?.map(cat => cat.title) || [],

          case 'h1':};

            return `<h1>${text}</h1>`;function renderContent(content) {

          case 'h2':  if (!content) return '';

            return `<h2>${text}</h2>`;  

          case 'h3':  return content

            return `<h3>${text}</h3>`;    .map(block => {

          case 'blockquote':      if (block._type === 'block') {

            return `<blockquote>${text}</blockquote>`;        return block.children

          default:          .map(child => child.text)

            return `<p>${text}</p>`;          .join('');

        }      }

      }      if (block._type === 'image' && block.asset) {

      if (block._type === 'image' && block.asset) {        return `<img src="${urlFor(block).url()}" alt="${block.alt || ''}" />`;

        return `<img src="${urlFor(block).url()}" alt="${block.alt || ''}" class="content-image" />`;      }

      }      return '';

      return '';    })

    })    .join('\n\n');

    .join('\n');}

}---

---

<BlogPost frontmatter={frontmatter}>

<BlogPost frontmatter={frontmatter}>  {post.body && (

  <div class="post-content">    <div class="post-content">

    <div set:html={post.body ? renderContent(post.body) : ''} />      <div set:html={renderContent(post.body)} />

  </div>    </div>

  )}

  {post.author && (

    <div class="author-bio">  {post.author && (

      {post.author.image && (    <div class="author-bio">

        <img       {post.author.image && (

          src={urlFor(post.author.image).width(100).url()}         <img 

          alt={post.author.name}          src={urlFor(post.author.image).width(100).url()} 

          class="author-image"          alt={post.author.name}

        />          class="author-image"

      )}        />

      <div>      )}

        <h3>{post.author.name}</h3>      <div>

        {post.author.bio && <p>{post.author.bio}</p>}        <h3>{post.author.name}</h3>

      </div>        {post.author.bio && <p>{post.author.bio}</p>}

    </div>      </div>

  )}    </div>

</BlogPost>  )}

</BlogPost>

<style>

  .post-content {<style>

    margin: 2rem 0;  .post-content {

    line-height: 1.8;    margin: 2rem 0;

  }    line-height: 1.8;

  }

  .content-image {

    max-width: 100%;  .author-bio {

    height: auto;    display: flex;

    border-radius: 8px;    gap: 1.5rem;

    margin: 2rem 0;    padding: 2rem;

  }    background: #f5f5f5;

    border-radius: 8px;

  .author-bio {    margin-top: 3rem;

    display: flex;    align-items: flex-start;

    gap: 1.5rem;  }

    padding: 2rem;

    background: #f5f5f5;  .author-image {

    border-radius: 8px;    width: 100px;

    margin-top: 3rem;    height: 100px;

  }    border-radius: 50%;

    object-fit: cover;

  .author-image {    flex-shrink: 0;

    width: 100px;  }

    height: 100px;

    border-radius: 50%;  .author-bio h3 {

    object-fit: cover;    margin: 0 0 0.5rem 0;

  }    font-size: 1.125rem;

  }

  .author-bio h3 {

    margin: 0 0 0.5rem 0;  .author-bio p {

    font-size: 1.125rem;    margin: 0;

  }    color: #666;

    font-size: 0.95rem;

  .author-bio p {  }

    margin: 0;

    color: #666;  @media (max-width: 768px) {

    font-size: 0.95rem;    .author-bio {

  }      flex-direction: column;

      align-items: center;

  @media (max-width: 768px) {      text-align: center;

    .author-bio {    }

      flex-direction: column;

      align-items: center;    .author-image {

      text-align: center;      width: 80px;

    }      height: 80px;

    }

    .author-image {  }

      width: 80px;</style>
      height: 80px;
    }
  }
</style>