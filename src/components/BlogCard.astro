---
interface Props {
  slug: string;
  title: string;
  description: string;
  pubDate: string | Date;
  category: string;
  image?: string;
}

const { slug, title, description, pubDate, category, image } = Astro.props;

// Handle null dates and provide a default
const dateObj = pubDate 
  ? (typeof pubDate === 'string' ? new Date(pubDate) : pubDate)
  : new Date();

const formattedDate = dateObj.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});
---

<article class="blog-card">
  <a href={`/blog/${slug}`} class="card-link">
    <div class="card-image">
      {image ? (
        <img src={image} alt={title} />
      ) : (
        <div class="placeholder-image">
          <svg width="64" height="64" viewBox="0 0 64 64" fill="none">
            <rect width="64" height="64" fill="#e5e7eb"/>
            <path d="M32 20v24M20 32h24" stroke="#9ca3af" stroke-width="3" stroke-linecap="round"/>
          </svg>
        </div>
      )}
      <span class="category-badge">{category}</span>
    </div>
    
    <div class="card-content">
      <div class="card-meta">
        <time datetime={dateObj.toISOString()}>{formattedDate}</time>
        <span class="read-time">5 min read</span>
      </div>
      
      <h3 class="card-title">{title}</h3>
      <p class="card-description">{description}</p>
      
      <span class="read-more">
        Read article →
      </span>
    </div>
  </a>
</article>

<style>
  .blog-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: transform 0.2s, box-shadow 0.2s;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .blog-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px rgba(0,0,0,0.15);
  }
  
  .card-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  
  .card-image {
    position: relative;
    width: 100%;
    height: 220px;
    overflow: hidden;
    background: #f3f4f6;
  }
  
  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s;
  }
  
  .blog-card:hover .card-image img {
    transform: scale(1.05);
  }
  
  .placeholder-image {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .category-badge {
    position: absolute;
    top: 1rem;
    left: 1rem;
    background: #2563eb;
    color: white;
    padding: 0.375rem 0.875rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: capitalize;
  }
  
  .card-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex: 1;
  }
  
  .card-meta {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: #6b7280;
  }
  
  .read-time::before {
    content: '•';
    margin-right: 1rem;
  }
  
  .card-title {
    font-size: 1.375rem;
    font-weight: 600;
    color: #1a1a1a;
    margin-bottom: 0.75rem;
    line-height: 1.3;
  }
  
  .card-description {
    color: #555;
    line-height: 1.6;
    margin-bottom: 1.25rem;
    flex: 1;
  }
  
  .read-more {
    color: #2563eb;
    font-weight: 600;
    font-size: 0.925rem;
  }
  
  .blog-card:hover .read-more {
    text-decoration: underline;
  }
  
  @media (max-width: 480px) {
    .card-image {
      height: 180px;
    }
    
    .card-title {
      font-size: 1.125rem;
    }
  }
</style>